<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAABM1JREFUeF7t
        3LmLZGUYhfF2RdxQEMRABBMTUUFwARPBQBFDU8HEzFj8AwRTNTIxMDQ1FAwMjDQQg0kMxA1BEBRBRVzO
        C9PQlE+fc2/VvV9Vd70P/EBm+ly/utUzU12znHRdd4m7RV6Xr6+q/65v6wZ3g7wiP8i/G36S1+Qm6Vbu
        WnlRvpLNJ2LTN1JP2vXSLdw18oJ8IXTznSvyktST2S3QM/KZ0M2e40upH13dlj0pHwvd3F18Kk9LN7EH
        5QOhm7mkj+RR6c7pAXlf/ha6gWv4Rz6Uh6S72r3yrvwldNNGqE+C+lF5vxxtd8mb8rvQTdqHP6U+Oe6R
        o+k2qS/cfhG6KYfgN6lPljvl0naz1BPxs9BNOES/Sj0xt8ul6UZ5VX4UetDb+kPeksel3r8q9d9vS30f
        bbZVZ6/HUI/lwnadvCz1ph89yF18Jw/LeT0i9TG03UU9lnpM9dguTPU2R31FXG9Z0IPaVX32uyfjtHpS
        lv6RcqoeWz3GeqwH3XPyudCDWEr9NDW1d4SusZR6rPWYD66n5BOhQy/tMZnaE0LXWFo99roHe2/U2xxn
        3SpTq4+la6xlb2/H7ONtjlNznpB6uUrXWNPQt2Puk/dkn29zHOJPWaTuUd2rumeLd7fUL6ZrvWqZo77O
        mNrav6hPcfr1Ut3DnbtD3pB6K4H+Z/tQD7Be0qbqY+q9KbrGPtQ9rHtZ93Sr6nfqDvVtjvqizz0pa31h
        uIS6p/Xb0bOb8gcJ9qk+++unpPp1on6hL/W7jPVth/Qjg3wvs6MLteXMji7SljM7ukhbzuzoIm05s/tW
        6EJtd/WnKmdX72L2k7K8ejKela7ruq7be/VezKkpf7aqPubsZrOz33cM11s8OsQcm9HHzLEZfcwcm9HH
        zLF6u7wUptffx3a9xdv265PzXn8f2/VWiw7hpGjjpGjjpGjjDI8O4aRo46Ro46Ro4wyPDuGkaOOkaOOk
        aOMMjw7hpGjjpGjjpGjjDI8O4aRo46Ro46Ro4wyPDuGkaOOkaOOkaOMMjw7hpGjjpGjjpGjjDI8O4aRo
        46Ro46Ro4wyPDuGkaOOkaOOkaOMMjw7hpGjjpGjjpGjjDI8O4aRo46Ro46Ro4wyPDuGkaOOkaOOkaOMM
        jw7hpGjjpGjjpGjjDI8O4aRo46Ro46Ro4wyPDuGkaOOkaOOkaOMMjw7hpGjjpGjjpGjjDI8O4aRo46Ro
        46Ro4wyPDuGkaOOkaOOkaOMMjw7hpGjjpGjjpGjjDI8O4aRo46Ro46Ro4wyPDuGkaOOkaOOkaOMMjw7h
        pGjjpGjjpGjjDI8O4aRo46Ro46Ro4wyPDuGkaOOkaOOkaOMMjw7hpGjjpGjjpGjjDI8O4aRo46Ro46Ro
        4wyPDuGkaOOkaOOkaOMMjw7hpGjjpGjjpGjjDI8O4aRo46Ro46Ro4wyPDuGkaOOkaOOkaOMMjw7hpGjj
        pGjjpGjjDI8O4aRo46Ro46Ro43Rd13XdwfW8HOq/X3iR1F8crb9AunPb/A3Uxhb5a9J04ba9naOLtu3t
        HF20bW/n6KJte7PrV1VjTH7V1a+qxpn0qouGbT0xGrX1xGjU1hOjUVtPjEZtPTEatfXE+mXvOJNe9m77
        bwy2eYb/m4xd13Vd13Vd13X/7+TkP4V+bRwafZyOAAAAAElFTkSuQmCC
</value>
  </data>
</root>